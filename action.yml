name: 'Run the Windows App Certification Kit'
description: 'Allows to run the Windows App Certification Kit (WACK) and generate test results'
inputs:
  name:
    description: "Name of the WACK execution"
    required: true
  package-path:
    description: "Relative path of the target package to test with the WACK (appxbundle or msixbundle file)"
    required: false
  package-full-name:
    description: "Full name of installed package"
    required: false
  report-name:
    description: "Desired name of the certification report"
    required: true
  ignore-rules:
    description: "List of WACK rules to ignore separated by a comma (optional)"
    required: false
  threat-as-warning-rules:
    description: "List of WACK rules to threat as warning if failed separated by a comma (optional)"
    required: false
  app-type:
    description: "Specifies the application type."
    required: false
    default: "windowsstoreapp"
  rules:
    description: "List of WACK rules to run explicitly separated by a comma (optional)"
    required: false

outputs:
  report-path:
    description: "Path of the certification report"
    value: ${{ steps.certification.outputs.reportPath }}

runs:
  using: "composite"
  steps:
    - name: Run the Windows App Certification Kit
      id: certification
      shell: powershell
      run: >
        ${{ github.action_path }}\scripts\Run-WACK.ps1
        -packagePath "${{ inputs.package-path }}"
        -packageFullName "${{ inputs.package-full-name }}"
        -reportName "${{ inputs.report-name }}"
        -appType "${{ inputs.app-type }}"
        -testIds ${{ inputs.rules || '@()' }}
        -Verbose

    - name: Analyze the Windows App Certification Kit results
      id: analysis
      shell: powershell
      run: >
        ${{ github.action_path }}\scripts\Analyze-Results.ps1
        "${{ steps.certification.outputs.reportPath }}"
        "${{ inputs.ignore-rules }}"
        "${{ inputs.threat-as-warning-rules }}"


branding:
  icon: check-circle
  color: green